/**
 * FIXME: アプリバージョンに書き換える
 */
def APP_VERSION = "1.0"


apply plugin: 'com.android.application'
apply plugin: 'com.eaglesakura.ci-support'

dependencies {
    /**
     * Android Support Library
     */
    compile "com.android.support:support-v4:25.3.1"
    compile "com.android.support:appcompat-v7:25.3.1"
    compile "com.android.support:cardview-v7:25.3.1"
    compile "com.android.support:recyclerview-v7:25.3.1"
    compile "com.android.support:palette-v7:25.3.1"
    compile "com.android.support:design:25.3.1"
    compile "com.android.support:support-vector-drawable:25.3.1"
    compile "com.android.support:support-annotations:25.3.1"
//    compile "com.android.support:percent:25.3.1"                  // PercentLayout
//    compile "com.android.support:exifinterface:25.3.1"            // Exif Interface
//    compile "com.android.support:customtabs:25.3.1"               // Chrome Custom Tabs

    /**
     * Play Service
     * https://developers.google.com/android/guides/overview
     * https://developers.google.com/android/guides/init
     */
//    compile "com.google.android.gms:play-services-plus:10.2.4"        // Google+
//    compile "com.google.android.gms:play-services-auth:10.2.4"        // Google Login
//    compile "com.google.android.gms:play-services-identity:10.2.4"    // Google Address API
//    compile "com.google.android.gms:play-services-analytics:10.2.4"   // Google Analytics
//    compile "com.google.android.gms:play-services-awareness:10.2.4"   // Google Awareness
//    compile "com.google.android.gms:play-services-cast:10.2.4"        // Google Cast
//    compile "com.google.android.gms:play-services-gcm:10.2.4"         // Google Cloud Messaging
//    compile "com.google.android.gms:play-services-drive:10.2.4"       // Google Drive
//    compile "com.google.android.gms:play-services-fitness:10.2.4"     // Google Fit
//    compile "com.google.android.gms:play-services-location:10.2.4"    // Google Location and Activity Recognition
//    compile "com.google.android.gms:play-services-maps:10.2.4"        // Google Maps
//    compile "com.google.android.gms:play-services-ads:10.2.4"         // Google Mobile Ads
//    compile "com.google.android.gms:play-services-places:10.2.4"      // Google Places
//    compile "com.google.android.gms:play-services-vision:10.2.4"      // Mobile Vision
//    compile "com.google.android.gms:play-services-nearby:10.2.4"      // Google Nearby
//    compile "com.google.android.gms:play-services-panorama:10.2.4"    // Google Panorama Viewer
//    compile "com.google.android.gms:play-services-games:10.2.4"       // Google Play Game services
//    compile "com.google.android.gms:play-services-safetynet:10.2.4"   // SafetyNet
//    compile "com.google.android.gms:play-services-wallet:10.2.4"      // Android Pay
//    compile "com.google.android.gms:play-services-wearable:10.2.4"    // Android Wear

    /**
     * Firebase
     */
//    compile "com.google.firebase:firebase-appindexing:10.2.4"         // App Indexing
//    compile "com.google.firebase:firebase-core:10.2.4"                // Firebase Core
//    compile "com.google.firebase:firebase-auth:10.2.4"                // Firebase Auth
//    compile "com.google.firebase:firebase-config:10.2.4"              // Firebase Remote Configs
//    compile "com.google.firebase:firebase-database:10.2.4"            // Firebase Realtime Database
//    releaseCompile "com.google.firebase:firebase-crash:10.2.4"

    /**
     * Remote Debug
     */
    debugCompile 'com.deploygate:sdk:3.1.1'

    /**
     * Android Things対応の場合
     */
//    provided 'com.google.android.things:androidthings:0.1-devpreview'

    /**
     * Android Canvas Test
     */
//    testCompile 'org.khronos:opengl-api:gl1.1-android-2.1_r1'

    if (!EGLIBRARY_COMPILE_LOCAL) {
        /**
         * 標準フレームワーク
         */
        implementation "com.eaglesakura:greendao-wrapper:2.2.459"
        implementation "com.eaglesakura:sloth-framework:3.25.1.16"

        /**
         * Optional
         */
//    compile "com.eaglesakura:geo-utils:1.0.420"
//    compile "com.eaglesakura:android-camera:1.1.145"
//    compile "com.eaglesakura:android-bluetooth:1.1.450"
//    compile "com.eaglesakura:android-gms:1.10.2.111"
//    compile "com.eaglesakura:android-firebase:1.10.1.133"

        /**
         * UnitTest
         */
        androidTestImplementation("com.eaglesakura:android-devicetest-support:2.2.275") {
            exclude(group: "com.eaglesakura", module: "java-commons")
            exclude(group: "com.eaglesakura", module: "android-commons")
            exclude(group: "com.android.support")
        }
        testImplementation("com.eaglesakura:android-unittest-support:1.5.211") {
            exclude(group: "com.eaglesakura", module: "java-commons")
            exclude(group: "com.eaglesakura", module: "android-commons")
            exclude(group: "com.android.support")
        }
    } else {
        // private.gradleで EGLIBRARY_COMPILE_LOCAL=true の場合にソースコード単位でフレームワークを取り込む

        /**
         * 標準フレームワーク
         */
        implementation project(":eglibrary:sloth-framework")
        implementation project(":eglibrary:greendao-wrapper")

        // 2階層依存
        // TODO: これはAS3.0 P1時点での暫定措置となる可能性が高い
        implementation project(":eglibrary:android-commons")
        implementation project(":eglibrary:garnet")
        implementation project(":eglibrary:alternet")
        implementation project(":eglibrary:margarineknife")
        implementation project(":eglibrary:cerberus")
        implementation project(":eglibrary:light-saver")
        implementation project(":eglibrary:onactivityresult-invoke")
        implementation project(":eglibrary:small-aquery")

        /**
         * Optional
         */
//        compile project(':eglibrary:android-camera')            // Camera API対応
//        compile project(':eglibrary:android-bluetooth')         // Bluetooth対応
//        compile project(":eglibrary:android-gms")               // Google Play Service対応
//        compile project(":eglibrary:android-firebase")          // Firebase対応

        /**
         * UnitTest
         */
        androidTestCompile project(":eglibrary:junit-support")
        androidTestImplementation project(":eglibrary:android-devicetest-support")

        testImplementation project(":eglibrary:junit-support")
        testImplementation project(":eglibrary:android-unittest-support")
    }

    /**
     * update robolectric version
     */
//    testCompile 'org.robolectric:robolectric:3.4-rc2'

    /**
     * 3400 methods
     */
//    compile "org.apache.commons:commons-lang3:3.5"
}

/**
 * Android Studioでのビルドとそれ以外を切り分ける
 */
if (project.hasProperty("devBuild")) {
    ext.ANDROID_STUDIO = true
    ext.ANDROID_BUILD_DATE = "\"date-devBuild\""
    ext.ANDROID_BUILD_ON_CI = "${Boolean.FALSE}"
    ext.ANDROID_BUILD_NUMBER = "1"
} else {
    ext.ANDROID_STUDIO = false
    ext.ANDROID_BUILD_DATE = "\"${eglibrary.ci.buildDate}\""
    ext.ANDROID_BUILD_ON_CI = "${eglibrary.ci.ciRunning}"
    ext.ANDROID_BUILD_NUMBER = "${eglibrary.ci.buildVersionCode as int}"
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    if (ANDROID_STUDIO) {
        aaptOptions.cruncherEnabled = false
    } else {
        aaptOptions.cruncherEnabled = false // FIXME! AAPT2の不具合かと思われるが、ImageMagicで出力した画像がエラーとなる
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    defaultConfig {
        /**
         * FIXME: ApplicationID(package name)に書き換える
         */
        applicationId "replace.your.app_package"
        minSdkVersion 21
        targetSdkVersion 25

        versionCode eglibrary.ci.buildVersionCode as int
        versionName "${APP_VERSION}${getArtifactVersionSuffix()}"
        vectorDrawables.useSupportLibrary = true        // using vector getDrawable

        /**
         * BuildConfig情報を必要に応じて追加する
         */
        buildConfigField "String", "BUILD_DATE", ANDROID_BUILD_DATE
        buildConfigField "String", "BASE_APP_VERSION", "\"${APP_VERSION}\""
        buildConfigField "int", "BUILD_NUMBER", ANDROID_BUILD_NUMBER  // ビルド番号
        buildConfigField "boolean", "BUILD_FROM_CI", ANDROID_BUILD_ON_CI  // CIフラグ

        /**
         * AndroidManifest.xmlの動的書き換えを利用する
         */
        manifestPlaceholders = [
                google_api_key: "@string/google_api_key"
        ]

        /**
         * 日本語と英語リソースのみを残す
         */
        resConfigs "en", "ja"

        /**
         * UnitTest
         */
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main {
            java.srcDirs += [
                    'src/main/gen/java',
            ]
        }
    }

    /**
     * アプリ署名設定
     */
    signingConfigs {
        debug {
            storeFile DEBUG_KEYSTORE_FILE_PATH
            storePassword DEBUG_KEYSTORE_PASS
            keyAlias DEBUG_KEYSTORE_ALIAS_NAME
            keyPassword DEBUG_KEYSTORE_ALIAS_PASS
        }

        release {
            storeFile RELEASE_KEYSTORE_FILE_PATH
            storePassword RELEASE_KEYSTORE_PASS
            keyAlias RELEASE_KEYSTORE_ALIAS_NAME
            keyPassword RELEASE_KEYSTORE_ALIAS_PASS
        }
    }

    /**
     * ビルドフレーバー種別一覧
     */
    flavorDimensions "machine"

    productFlavors {
        /**
         * Android Studioでのローカルビルド設定
         */
        develop {
            dimension "machine"

            minSdkVersion 21

            /**
             * 日本語とxxxhdpiリソースのみを残す
             */
            resConfigs "ja", DEVELOER_TARGET_RESOURCE_DPI
        }

        /**
         * デプロイ / ビルドマシン用設定
         */
        product {
            dimension "machine"
        }
    }

    buildTypes {

        debug {
            applicationIdSuffix = ".debug"
            signingConfig signingConfigs.debug

            ext.alwaysUpdateBuildId = false
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        // memo: http://developer.covelline.com/2015/06/circle-ci/
        javaMaxHeapSize eglibrary.ci.ciRunning ? "1g" : DEVELOER_ANDROID_DEX_MAXHEAP
        maxProcessCount eglibrary.ci.ciRunning ? 1 : DEVELOER_ANDROID_DEX_MAXPROCESS
        threadCount eglibrary.ci.ciRunning ? 1 : (DEVELOER_ANDROID_DEX_MAXPROCESS * 2)
        preDexLibraries !eglibrary.ci.ciRunning
    }


    lintOptions {
        disable "DuplicateIds"
        disable "NewApi"
        disable "InvalidPackage"
        disable "ProtectedPermissions"
        disable "ResourceType"
//        abortOnError false
    }

    /**
     * アプリ実行に不要となるファイルのテンプレート
     */
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/rxjava.properties'
        exclude "**/**annotations.gwt.xml"
        exclude "**/**-setter_store.bin"
        exclude "**/**-layoutinfo.bin"
        exclude "**/**-br.bin"
    }
    testOptions {
        unitTests.all {
            // CIではVM使用量を抑える
            if (eglibrary.ci.ciRunning) {
                jvmArgs '-Xmx2048m', '-XX:+HeapDumpOnOutOfMemoryError'
            }
        }
    }
}

/**
 * バージョンを取得する
 * CircleCIの場合、バージョン末尾にビルド番号を付与する
 */
def getArtifactVersionSuffix() {
    if (System.env.CIRCLE_BUILD_NUM != null) {
        // CircleCIのバージョンが指定されているので、そちらを利用する
        return ".${System.env.CIRCLE_BUILD_NUM}"
    } else {
        return ".local"
    }
}

apply from: "generator.gradle"
apply plugin: 'com.github.ben-manes.versions'

/**
 * Slackに通知を行なう
 */
apply plugin: 'com.mindera.gradle.slack'

slack {
    url System.getenv("SLACK_HOOK_URL")
    dependsOnTasks 'assembleDevelopDebug', 'assembleProductRelease', 'testDevelopDebugUnitTest', 'dependencyUpdates'
    title file("../").name
    enabled = (System.getenv("SLACK_HOOK_URL") != null)
//    enabled = true
    gitInfo = true
}

///**
// * Dexで使用されているメソッド数の統計を取る
// * dexcountはGradle 3.3に非対応のため、一旦削除する
// */
//apply plugin: 'com.getkeepsafe.dexcount'
//dexcount {
//    format = "json"
//    includeClasses = false
//    includeFieldCount = true
//    includeTotalMethodCount = true
//    orderByMethodCount = true
//    verbose = false
//}

/**
 * FIXME: Google Play Serviceを利用する場合は有効化する
 */
//apply plugin: 'com.google.gms.google-services'
